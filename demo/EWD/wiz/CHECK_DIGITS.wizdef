# -*- perl -*-

#$DESCRIPTION Check digits value or min..max range

#        Name     Values    Description
#        -------  --------  -------------------------------------------
#$PARAM  value    %s        VALUE or MIN..MAX range to check
#$PARAM  [color]  -,%s      Expected digits color

{
  my $name = $VISU->{REGION};

  my $ret = Digits::Show($name);
  print "Digits $name: $ret\n";

  if ( $ret =~ /^VALUE=(\S+)\s+MIN=(\S+)\s+MAX=(\S+)/ ) {
    my $VALUE = $1;
    my $MIN = $2;
    my $MAX = $3;

    if ( $VALUE eq '-' ) {  $VALUE = undef }
    else { $VALUE = sprintf("%.1f", $VALUE) }

    if ( $MIN eq '-' ) { $MIN = undef }
    else { $MIN = sprintf("%.1f", $MIN) }

    if ( $MAX eq '-' ) { $MAX = undef }
    else { $MAX = sprintf("%.1f", $MAX) }

    sub check_value {
      my $id = shift;
      my $actual = shift;
      my $expected = shift;

      if ( defined $actual ) {
	if ( $expected != $actual ) {
	  print "IN_VERDICT Digits value $id: actual=$actual expected=$expected\n";
	  $verdict = FAILED;
	}
      }
      else {
	print "IN_VERDICT Digits are not displayed (yet?)\n";
	$verdict = FAILED;
      }
    }

    my $val1 = "<value>";
    if ( $val1 =~ s/\.\.(.+)$// ) {
      my $val2 = $1;
      check_value('MIN', $MIN, $val1);
      check_value('MAX', $MAX, $val2);
    }
    else {
      check_value('VALUE', $VALUE, $val1);
    }

#$IF '<color>' ne '-'
    if ( $verdict == PASSED ) {
      my $box = $VISU->{$name.'_DIGITS'};
      my $color = Color::<color>;

      if ( $VISU->pad("window=$box color=$color gap=10") ) {
	print "$name digits color is <color>\n";
      }
      else {
	print "IN_VERDICT $name digits color is not <color>\n";
	$verdict = FAILED;
      }
    }
#$ENDIF
  }
  else {
    print "IN_VERDICT Failed to read digits value $name\n";
    $verdict = INCONCLUSIVE;
  }
}
